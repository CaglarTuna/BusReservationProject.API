// <auto-generated />
using System;
using BusReservationProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusReservationProject.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusReservationProject.Core.Models.Buses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DestinationsId")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationsId");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Destinations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Seats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SeatNumbers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusesId")
                        .HasColumnType("int");

                    b.Property<int?>("SeatsId")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusesId");

                    b.HasIndex("SeatsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRolesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Buses", b =>
                {
                    b.HasOne("BusReservationProject.Core.Models.Destinations", "Destinations")
                        .WithMany("Buses")
                        .HasForeignKey("DestinationsId");

                    b.Navigation("Destinations");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Tickets", b =>
                {
                    b.HasOne("BusReservationProject.Core.Models.Buses", "Buses")
                        .WithMany("Tickets")
                        .HasForeignKey("BusesId");

                    b.HasOne("BusReservationProject.Core.Models.Seats", "Seats")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatsId");

                    b.HasOne("BusReservationProject.Core.Models.Users", "Users")
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Buses");

                    b.Navigation("Seats");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Users", b =>
                {
                    b.HasOne("BusReservationProject.Core.Models.UserRoles", "UserRoles")
                        .WithMany("Users")
                        .HasForeignKey("UserRolesId");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Buses", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Destinations", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Seats", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.UserRoles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusReservationProject.Core.Models.Users", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
